#ifndef __Swig_swigkeys_h__
#define __Swig_swigkeys_h__

#include "swig.h"

extern void Swig_keys_init();

extern String *empty_string;
extern String *k_1;
extern String *k_SWIGTYPE;
extern String *k_access;
extern String *k_allowstypedef;
extern String *k_alttype;
extern String *k_argbyname;
extern String *k_baselist;
extern String *k_cdecl;
extern String *k_class;
extern String *k_classforward;
extern String *k_code;
extern String *k_coloncolon;
extern String *k_compactdefargs;
extern String *k_construct;
extern String *k_constructor;
extern String *k_conversionoperator;
extern String *k_csymnextSibling;
extern String *k_csympreviousSibling;
extern String *k_csymtab;
extern String *k_decl;
extern String *k_destroy;
extern String *k_destructor;
extern String *k_disown;
extern String *k_enumitem;
extern String *k_error;
extern String *k_extern;
extern String *k_friend;
extern String *k_fullname;
extern String *k_get;
extern String *k_hidden;
extern String *k_ignore;
extern String *k_inherit;
extern String *k_kwargs;
extern String *k_lname;
extern String *k_locals;
extern String *k_matchlist;
extern String *k_member;
extern String *k_name;
extern String *k_namespace;
extern String *k_nodetype;
extern String *k_parent;
extern String *k_parentnode;
extern String *k_parm;
extern String *k_parms;
extern String *k_partialargs;
extern String *k_partials;
extern String *k_pattern;
extern String *k_privatebaselist;
extern String *k_protectedbaselist;
extern String *k_public;
extern String *k_qname;
extern String *k_rename;
extern String *k_scope;
extern String *k_self;
extern String *k_set;
extern String *k_sourcefmt;
extern String *k_start;
extern String *k_static;
extern String *k_storage;
extern String *k_symboltable;
extern String *k_symname;
extern String *k_symnextSibling;
extern String *k_symoverloaded;
extern String *k_symovername;
extern String *k_sympreviousSibling;
extern String *k_symsymtab;
extern String *k_symtab;
extern String *k_symtypename;
extern String *k_symweak;
extern String *k_targetfmt;
extern String *k_targetname;
extern String *k_template;
extern String *k_templateparm;
extern String *k_templateparms;
extern String *k_templatetype;
extern String *k_throws;
extern String *k_tmapmatch;
extern String *k_type;
extern String *k_typedef;
extern String *k_typetab;
extern String *k_uname;
extern String *k_using;
extern String *k_value;
extern String *k_virtual;
extern String *k_wrapper;
#endif /* __Swig_swigkeys_h__ */
