Version 1.3.20 (In progress)
============================
04/15/2003: ljohnson (Lyle Johnson)
            [Ruby] Incorporated Nobu Nakada's patches for supporting the Ruby
            1.8 allocation framework.

04/15/2003: ljohnson (Lyle Johnson)
            [Ruby] Replaced all uses of the deprecated STR2CSTR() macro with the
            safer StringValuePtr() macro. For more information, see ruby-talk:67059
            and follow-ups to that post.

04/11/2003: beazley
            Fixed problem with preprocessor macro expansion.  For example:
 
                #define min(x,y) ((x) < (y)) ? (x) : (y) 
                int f(int min);

            Reported by Sebastien Recio.

04/10/2003: cheetah (William Fulton)
            [Java] Added a runtime check to typemaps in arrays_java.i library to check 
            that the Java array passed in is the same size as the C array and throw an 
            exception if not.

            Also fix to use delete instead of free for arrays created using new.

04/07/2003: cheetah (William Fulton)
            Remove GCC3 warning when compiling the examples and test-suite:

              cc1plus: warning: changing search order for system directory "/usr/include"
              cc1plus: warning: as it has already been specified as a non-system directory 

            See SF patch #715531 submitted by Gerald Williams

04/03/2003: cheetah (William Fulton)
            [C#] Improved wrapping of enums and constants. These were previously
            wrapped as C# variables rather than constants. Either these are wrapped
            as readonly (runtime) constants or compile time constants, depending on
            the %javaconst directive (The directive is likely to change name soon).
            For example wrapping:
              %javaconst(0);
              #define ABC 22
              %javaconst(1) XYZ;
              #define XYZ 33
            is now:
              public static readonly int ABC = examplePINVOKE.get_ABC();
              public const int XYZ = 33;

04/03/2003: cheetah (William Fulton)
            [Java] Global constants and enums are put in their own interface called
            xxxConstants, where xxx is the module name. This is an improvement as 
            it is possible to derive (implement) a Java class from the xxxConstants
            interface to improve the syntax; namely when wrapping:
              enum {ONE=1, TWO, THREE};
            accessing these from a Java class implementing xxxConstants is neater:
              int number = ONE;
            than the previous:
              int number = xxx.ONE;

            Patch submitted by Dave Dribin.

04/02/2003: cheetah (William Fulton)
            Build improvements for multiple builds. This allows one to build
            the SWIG executable and runtime libraries for different platforms/compilers 
            etc by running configure in different directories. This isn't 100% just 
            yet and won't be until libtool is better configured... a 'configure' and 
            'make distclean' needs to be run in the root directory before it all works.
            For example:
              $ ./configure
              $ make distclean
              $ mkdir config1; cd config1; ../configure CC=gcc CXX=g++; make; cd ..
              $ mkdir config2; cd config2; ../configure CC=cc CXX=c++; make; cd ..
            
            To be improved. A 'make check' does not work yet either. 

04/01/2003: beazley
            Fixed template partial specialization argument expansion bug.
            This showed up when trying to use std_vector.i with vectors
            of pointers.

03/31/2003: cheetah (William Fulton)
            Fix for parallel make builds of SWIG, for example
              make -j 4
            Build failure reported by Bill Clarke.

03/28/2003: beazley
            Released 1.3.19.


