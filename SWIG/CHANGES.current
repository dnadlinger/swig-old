Version 1.3.23 (in progress)
==================================

09/26/2004: mmatus

	    - add %feature("exceptionclass") to identify a class used
	      as exception. Before swig identified and marked a class
	      using the "cplus:exceptionclass" attribute. However, the
	      class needed to appear on an throw() statement.  Now
	      swig keeps trying to identify the exception classes, as
	      before, but it also allows the user to mark a class by
	      using the %feature explicitly. (mostly relevant for
	      python and chicken)

	    [Python]

	    - fix -modern option + exceptions, which mix old class
	      style with the new one. So, we always need to emit
	      the "nonmodern" python code.

	    - add the "python:nondynamic" feature and its handler

	      now if you have
	      
	      %pythonnondynamic(1) A;
	      
	      struct A {
	       int a;
	       int b;
	      };

	      then, in the python side
	      
	      aa = A()
	      
	      aa.a = 1 # ok
	      aa.b = 2 # ok
	      aa.c = 3 # error, the class can not be extended dynamically.

	    
	    Since this is a feature, you can use

	      %pythonnondynamic(1);

            or 

	      %pythondynamic(0);
   
	    to force all the wrapped classes to be "nondynamic" ones.

	    The default, as in regular python, is that all the wrapped
	    classes are dynamics. So, careful with your spelling.

09/14/2004: mmatus 
	    - Support the -I- option.

	    - Differentiate between %include <file> and %include "file".
	      This fix several corner cases.

	    
	    [Python] Several patches:

	    - Normalize the Lib file names: 
		*.swg internal files, 
		*.i   user files.

	    - Fix Char[ANY] typemaps, so they also delete any extra '\0' chars,
	      now they behave as before (1.3.21). Still, you can use
	      the SWIG_PRESERVE_CARRAY_SIZE macro if you need to
	      preserve the original size (see pystrbase.swg).

	    - Add the Char FIXSIZE[ANY] typemaps, to preserve the
              original C array sizes (see above). Though, you can't
              use them yet since %apply and arrays are not working
              together.

            - Add pyfragments.swg, now the user can add fragments
	      to override the default ones.


09/10/2004: wsfulton
            Patch from Bill Clarke which fixes spurious preprocessor bug which
            shows on Solaris and gcc, eg:
                Warning(202): Could not evaluate '!defined(SWIGJAVA) &&
                !(defined(SWIGCSHARP)'

09/10/2004: wsfulton
            Restored multiple build directories for the test-suite. Patch from
            Bill Clarke.

09/06/2004: wsfulton
            Added the missing runtime.dsp Visual Studio project files for the
            import examples to work.

