Version 1.3.40 (in progress)
============================

2009-07-05: olly
	    [PHP] Update the list of PHP keywords - "cfunction" is no longer a
	    keyword in PHP5 and PHP 5.3 added "goto", "namespace", "__DIR__",
	    and "__NAMESPACE__".

2009-07-03: olly
	    [Tcl] To complement USE_TCL_STUBS, add support for USE_TK_STUBS
	    and SWIG_TCL_STUBS_VERSION.  Document all three in the Tcl chapter
	    of the manual.  Based on patch from SF#2810380 by Christian
	    Gollwitzer.

2009-07-02: wsfulton
            Fix -Wallkw option as reported by Solomon Gibbs.

2009-07-02: wsfulton
            Fix syntax error when a nested struct contains a comment containing a * followed eventually by a /. 
            Regression from 1.3.37, reported by Solomon Gibbs.

2009-06-30: olly
	    [Ruby] Undefine close and connect macros defined by Ruby API
	    headers as we don't need them and they can clash with C++ methods
	    being wrapped.  Patch from Vit Ondruch in SF#2814430.

2009-06-26: olly
	    [Ruby] Fix to handle FIXNUM values greater than MAXINT passed for a
	    double parameter.

2009-06-24: wsfulton
            Fix wrapping methods with default arguments and the compactdefaultargs feature 
            where a class is passed by value and is assigned a default value. The SwigValueWrapper
            template workaround for a missing default constructor is no longer used as the code 
            generated does not call the default constructor.

2009-06-16: wsfulton
	    [Java,C#] Fix enum marshalling when %ignore is used on one of the enum items.
            Incorrect enum values were being passed to the C++ layer or compilation errors resulted.

2009-06-02: talby
	    [Perl] Resolved reference.i overload support problem
	    identified by John Potowsky.

2009-05-26: wsfulton
	    [C#] Improved std::map wrappers based on patch from Yuval Baror. The C# proxy
            now implements System.Collections.Generic.IDictionary<>.

	    These std:map wrappers have a non-backwards compatible overhaul to make them
            like a .NET IDictionary. Some method names have changed as following:
              set -> setitem (use this[] property now)
              get -> getitem (use this[] property now)
              has_key -> ContainsKey
              del -> Remove
              clear -> Clear

            The following macros used for std::map wrappers are deprecated and will no longer work:
              specialize_std_map_on_key
              specialize_std_map_on_value
              specialize_std_map_on_both

            *** POTENTIAL INCOMPATIBILITY ***

2009-05-14: bhy
            [Python] Fix the wrong pointer value returned by SwigPyObject_repr().

2009-05-13: mutandiz (Mikel Bancroft)
	    [allegrocl] Minor tweak when wrapping in -nocwrap mode.

2009-05-11: wsfulton
	    [C#] Improved std::vector wrappers on the C# proxy side from Yuval Baror. These
	    implement IList<> instead of IEnumerable<> where possible.

2009-04-29: wsfulton
	    [Java, C#] Add the 'notderived' attribute to the javabase and csbase typemaps.
	    When this attribute is set, the typemap will not apply to classes that are derived
	    from a C++ base class, eg 
	      %typemap(csbase, notderived="1") SWIGTYPE "CommonBase"

2009-04-29: olly
	    [Python] Don't attempt to acquire the GIL in situations where we
	    know that it will already be locked.  This avoids some dead-locks
	    with mod_python (due to mod_python bugs which are apparently
	    unlikely to ever be fixed), and results in smaller wrappers which
	    run a little faster (in tests with Xapian on x86-64 Ubuntu 9.04,
	    the stripped wrapper library was 11% smaller and ran 2.7% faster).

2009-04-21: wsfulton
	    [C#] Fix #2753469 - bool &OUTPUT and bool *OUTPUT typemaps initialisation.

2009-04-09: wsfulton
	    Fix #2746858 - C macro expression using floating point numbers

2009-03-30: olly
	    [PHP] The default out typemap for char[ANY] now returns the string up to a
	    zero byte, or the end of the array if there is no zero byte.  This
	    is the same as Python does, and seems more generally useful than
	    the previous behaviour of returning the whole contents of the array
	    including any zero bytes.  If you want the old behaviour, you can provide
	    your own typemap to do this:

	    %typemap(out) char [ANY]
	    %{
		RETVAL_STRINGL($1, $1_dim0, 1);
	    %}
