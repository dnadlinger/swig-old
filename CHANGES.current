2008-09-26  Mikel Bancroft  <mikel@franz.com>

Version 1.3.37 (in progress)
============================

2008-11-01: wsfulton
            Add the strip encoder patch from Anatoly Techtonik #2130016. This enables an 
            easy way to rename symbols by stripping a commonly used prefix in all the
            function/struct names. It works in the same way as the other encoders, such as
            title, lower, command etc outlined in CHANGES file dated 12/30/2005. Example
            below will rename wxAnotherWidget to AnotherWidget and wxDoSomething to 
            DoSomething:

              %rename("%(strip:[wx])s") ""; 

              struct wxAnotherWidget {
                  void wxDoSomething();
              };

2008-09-26: mutandiz
	    [allegrocl]
	    Lots of test-suite work.
	    - Fix ordering of wrapper output and %{ %} header output.
	    - Fix declarations of local vars in C wrappers.
	    - Fix declaration of defined constants in C wrappers.
	    - Fix declaration of EnumValues in C wrappers.
	    - add some const typemaps to allegrocl.swg
	    - add rename for operator bool() overloads.
	
2008-09-25: olly
	    [PHP5] Fill in typemaps for SWIGTYPE and void * (SF#2095186).

2008-09-22: mutandiz (Mikel Bancroft)
	    [allegrocl]
	    - Support wrapping of types whose definitions are not seen by
	    SWIG. They are treated as forward-referenced classes and if a
	    definition is not seen are treated as (* :void).
	    - Don't wrap the contents of unnamed namespaces.
	    - More code cleanup. Removed some extraneous warnings.
	    - start work on having the allegrocl mod pass the cpp test-suite.

2008-09-19: olly
	    [PHP5] Add typemaps for long long and unsigned long long.

2008-09-18: wsfulton
            [C#] Added C# array typemaps provided by Antti Karanta.
            The arrays provide a way to use MarshalAs(UnmanagedType.LPArray)
            and pinning the array using 'fixed'. See arrays_csharp.i library file
            for details.

2008-09-18: wsfulton
	    Document the optional module attribute in the %import directive,
            see Modules.html. Add a warning for Python wrappers when the
            module name for an imported base class is missing, requiring the
            module attribute to be added to %import, eg 

              %import(module="FooModule") foo.h

2008-09-18: olly
	    [PHP5] Change the default input typemap for char * to turn PHP
	    Null into C NULL (previously it was converted to an empty string).
	    The new behaviour is consistent with how the corresponding output
	    typemap works (SF#2025719).

	    If you want to keep the old behaviour, add the following typemap
	    to your interface file (PHP's convert_to_string_ex() function does
	    the converting from PHP Null to an empty string):

	    %typemap(in) char * {
		convert_to_string_ex($input);
		$1 = Z_STRVAL_PP($input);
	    }

2008-09-18: olly
	    [PHP5] Fix extra code added to proxy class constructors in the case
	    where the only constructor takes no arguments.

2008-09-18: olly
	    [PHP5] Fix wrapping of a renamed enumerated value of an enum class
	    member (SF#2095273).

2008-09-17: mutandiz (Mikel Bancroft)
	    [allegrocl]
	    - Fix how forward reference typedefs are handled, so as not to conflict
	    with other legit typedefs.
	    - Don't (for now) perform an ffitype typemap lookup when trying to
	    when calling compose_foreign_type(). This is actually a useful thing
	    to do in certain cases, the test cases for which I can't currently
	    locate :/. It's breaking some wrapping behavior that is more commonly
	    seen, however. I'll readd in a more appropriate way when I can
	    recreate the needed test case, or a user complains (which means
	    they probably have a test case).
	    - document the -isolate command-line arg in the 'swig -help' output.
	    It was in the html docs, but not there.
	    - small amount of code cleanup, removed some unused code.
	    - some minor aesthetic changes.

2008-09-12: bhy
            [Python] Python 3.0 support branch merged into SWIG trunk. Thanks to
            Google Summer of Code 2008 for supporting this project! By default
            SWIG will generate interface files compatible with both Python 2.x
            and 3.0. And there's also some Python 3 new features that can be
            enabled by passing a "-py3" command line option to SWIG. These
            features are:

              - Function annotation support
                  Also, the parameter list of proxy function will be generated,
                  even without the "-py3" option. However, the parameter list
                  will fallback to *args if the function (or method) is overloaded.
              - Buffer interface support
              - Abstract base class support

            For details of Python 3 support and these features, please see the
            "Python 3 Support" section in the "SWIG and Python" chapter of the SWIG
            documentation.

            The "-apply" command line option and support of generating codes
            using apply() is removed. Since this is only required by very old
            Python.

            This merge also patched SWIG's parser to solve a bug. By this patch,
            SWIG features able to be correctly applied on C++ conversion operator,
            such like this:
              
              %feature("shadow")  *::operator bool %{ ... %}

2008-09-02: richardb
	    [Python] Commit patch #2089149: Director exception handling mangles
	    returned exception.  Exceptions raised by Python code in directors
	    are now passed through to the caller without change.  Also, remove
	    the ": " prefix which used to be added to other director exceptions
	    (eg, those due to incorrect return types).

2008-09-02: wsfulton
            [Python] Commit patch #1988296 GCItem multiple module linking issue when using 
            directors.

2008-09-02: wsfulton
            [C#] Support for 'using' and 'fixed' blocks in the 'csin' typemap is now
            possible through the use of the pre attribute and the new terminator attribute, eg

              %typemap(csin, 
                       pre="    using (CDate temp$csinput = new CDate($csinput)) {",
                       terminator="    } // terminate temp$csinput using block",
                      ) const CDate &
                       "$csclassname.getCPtr(temp$csinput)"

            See CSharp.html for more info.

2008-09-01: wsfulton
            [CFFI] Commit patch #2079381 submitted by Boris Smilga - constant exprs put into 
            no-eval context in DEFCENUM

2008-08-02: wuzzeb
            [Chicken,Allegro] Commit Patch 2019314
            Fixes a build error in chicken, and several build errors and other errors
            in Allegro CL

2008-07-19: wsfulton
            Fix building of Tcl examples/test-suite on Mac OSX reported by Gideon Simpson.

2008-07-17: wsfulton
            Fix SF #2019156 Configuring with --without-octave or --without-alllang
            did not disable octave.

2008-07-14: wsfultonn
            [Java, C#] Fix director typemaps for pointers so that NULL pointers are correctly 
            marshalled to C#/Java null in director methods.

2008-07-04: olly
	    [PHP] For std_vector.i and std_map.i, rename empty() to is_empty()
	    since "empty" is a PHP reserved word.  Based on patch from Mark Klein
	    in SF#1943417.

2008-07-04: olly
	    [PHP] The deprecated command line option "-make" has been removed.  
	    Searches on Google codesearch suggest that nobody is using it now
	    anyway.

2008-07-04: olly
	    [PHP] The SWIG cdata.i library module is now supported.

2008-07-03: olly
	    [PHP] The deprecated command line option "-phpfull" has been
	    removed.  We recommend building your extension as a dynamically
	    loadable module.

2008-07-02: olly
	    [PHP4] Support for PHP4 has been removed.  The PHP developers are
	    no longer making new PHP4 releases, and won't even be providing
	    patches for critical security issues after 2008-08-08.

2008-07-02: olly
	    [Python] Import the C extension differently for Python 2.6 and
	    later so that an implicit relative import doesn't produce a
	    deprecation warning for 2.6 and a failure for 2.7 and later.
	    Patch from Richard Boulton in SF#2008229, plus follow-up patches
	    from Richard and Haoyu Bai.

